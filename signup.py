# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'signup.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import  mysql.connector

import  re
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox


class Ui_secondWindow(object):
    def closeMain(self, second_w, main_w):
        second_w.hide()
    def setupUi(self, secondWindow,MainWindow):
        secondWindow.setObjectName("secondWindow")
        secondWindow.resize(500, 580)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("C:/Users/Asus/Desktop/Type-online-app-master/src/img/logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        secondWindow.setWindowIcon(icon)
        secondWindow.setStyleSheet("background-color: #fff; border-radius: 5px;")
        self.centralwidget = QtWidgets.QWidget(secondWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.photo = QtWidgets.QLabel(self.centralwidget)
        self.photo.setGeometry(QtCore.QRect(125, 10, 241, 191))
        self.photo.setText("")
        self.photo.setPixmap(QtGui.QPixmap("image/edit-user-256.ico"))
        self.photo.setScaledContents(True)
        self.photo.setObjectName("photo")
        self.btn_close = QtWidgets.QPushButton(self.centralwidget)
        self.btn_close.setGeometry(QtCore.QRect(460, 10, 30, 30))
        self.btn_close.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_close.setStyleSheet("background:none;")
        self.btn_close.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("C:/Users/Asus/Desktop/Type-online-app-master/src/img/close.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_close.setIcon(icon1)
        self.btn_close.setIconSize(QtCore.QSize(20, 20))
        self.btn_close.setObjectName("btn_close")
        self.btn_minimze = QtWidgets.QPushButton(self.centralwidget)
        self.btn_minimze.setGeometry(QtCore.QRect(430, 10, 30, 30))
        self.btn_minimze.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_minimze.setStyleSheet("background:none;")
        self.btn_minimze.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("C:/Users/Asus/Desktop/Type-online-app-master/src/img/minimize.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_minimze.setIcon(icon2)
        self.btn_minimze.setIconSize(QtCore.QSize(20, 20))
        self.btn_minimze.setObjectName("btn_minimze")
        self.btn_changemood = QtWidgets.QPushButton(self.centralwidget)
        self.btn_changemood.setGeometry(QtCore.QRect(400, 13, 30, 30))
        self.btn_changemood.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_changemood.setStyleSheet("background:none;")
        self.btn_changemood.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("C:/Users/Asus/Desktop/Type-online-app-master/src/img/change-theme.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_changemood.setIcon(icon3)
        self.btn_changemood.setIconSize(QtCore.QSize(20, 20))
        self.btn_changemood.setObjectName("btn_changemood")
        self.title = QtWidgets.QLabel(self.centralwidget)
        self.title.setGeometry(QtCore.QRect(0, 220, 500, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.title.setFont(font)
        self.title.setStyleSheet("color:  #600080;")
        self.title.setAlignment(QtCore.Qt.AlignCenter)
        self.title.setObjectName("title")
        self.usernamelb = QtWidgets.QLabel(self.centralwidget)
        self.usernamelb.setGeometry(QtCore.QRect(70, 270, 100, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.usernamelb.setFont(font)
        self.usernamelb.setStyleSheet("color: #010A1A;")
        self.usernamelb.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.usernamelb.setObjectName("usernamelb")
        self.passlb = QtWidgets.QLabel(self.centralwidget)
        self.passlb.setGeometry(QtCore.QRect(70, 370, 100, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.passlb.setFont(font)
        self.passlb.setStyleSheet("color: #010A1A;")
        self.passlb.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.passlb.setObjectName("passlb")
        self.username_en = QtWidgets.QLineEdit(self.centralwidget)
        self.username_en.setGeometry(QtCore.QRect(190, 270, 220, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        self.username_en.setFont(font)
        self.username_en.setStyleSheet("background-color: #DEDEDE; color: #010A1A;\n"
"border-radius: 8px;")
        self.username_en.setObjectName("username_en")
        self.password_en = QtWidgets.QLineEdit(self.centralwidget)
        self.password_en.setGeometry(QtCore.QRect(190, 370, 220, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        self.password_en.setFont(font)
        self.password_en.setStyleSheet("background-color: #DEDEDE; color: #010A1A;\n"
"border-radius: 8px;")
        self.password_en.setObjectName("password_en")
        self.password_en.setEchoMode(QtWidgets.QLineEdit.Password)
        self.btn_signup = QtWidgets.QPushButton(self.centralwidget,clicked = lambda :self. add_users(secondWindow, MainWindow))
        self.btn_signup.setGeometry(QtCore.QRect(80, 490, 330, 40))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.btn_signup.setFont(font)
        self.btn_signup.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_signup.setStyleSheet("\n"
"border-radius: 8px;\n"
"background-color:#600080 ;\n"
"color: #ffffff;")
        self.btn_signup.setObjectName("btn_signup")
        self.acountlb = QtWidgets.QLabel(self.centralwidget)
        self.acountlb.setGeometry(QtCore.QRect(160, 540, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.acountlb.setFont(font)
        self.acountlb.setStyleSheet("color: #010A1A;")
        self.acountlb.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.acountlb.setObjectName("acountlb")
        self.btn_login = QtWidgets.QPushButton(self.centralwidget, clicked = lambda : self.closeMain(secondWindow, MainWindow))
        self.btn_login.setGeometry(QtCore.QRect(310, 540, 61, 31))
        font = QtGui.QFont()
        font.setUnderline(False)
        font.setStrikeOut(False)
        self.btn_login.setFont(font)
        self.btn_login.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_login.setStyleSheet("QPushButton{\n"
"background: none; color: #600080;  text-decoration: none;\n"
"}\n"
"QPushButton:hover{\n"
" text-decoration: underline;\n"
"}")
        self.btn_login.setObjectName("btn_login")
        self.repasslb = QtWidgets.QLabel(self.centralwidget)
        self.repasslb.setGeometry(QtCore.QRect(70, 420, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.repasslb.setFont(font)
        self.repasslb.setStyleSheet("color: #010A1A;")
        self.repasslb.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.repasslb.setObjectName("repasslb")
        self.repassword_en = QtWidgets.QLineEdit(self.centralwidget)
        self.repassword_en.setGeometry(QtCore.QRect(190, 420, 220, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        self.repassword_en.setFont(font)
        self.repassword_en.setStyleSheet("background-color: #DEDEDE; color: #010A1A;\n"
"border-radius: 8px;")
        self.repassword_en.setObjectName("repassword_en")
        self.repassword_en.setEchoMode(QtWidgets.QLineEdit.Password)
        self.alarmlb = QtWidgets.QLabel(self.centralwidget)
        self.alarmlb.setGeometry(QtCore.QRect(80, 460, 330, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.alarmlb.setFont(font)
        self.alarmlb.setStyleSheet("color: #d1131f;")
        self.alarmlb.setText("")
        self.alarmlb.setAlignment(QtCore.Qt.AlignCenter)
        self.alarmlb.setObjectName("alarmlb")
        self.email_en = QtWidgets.QLineEdit(self.centralwidget)
        self.email_en.setGeometry(QtCore.QRect(190, 320, 220, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        self.email_en.setFont(font)
        self.email_en.setStyleSheet("background-color: #DEDEDE; color: #010A1A;\n"
"border-radius: 8px;")
        self.email_en.setObjectName("email_en")
        self.emaillb = QtWidgets.QLabel(self.centralwidget)
        self.emaillb.setGeometry(QtCore.QRect(70, 320, 100, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.emaillb.setFont(font)
        self.emaillb.setStyleSheet("color: #010A1A;")
        self.emaillb.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.emaillb.setObjectName("emaillb")
        secondWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(secondWindow)
        self.btn_close.clicked.connect(secondWindow.close) # type: ignore
        self.btn_minimze.clicked.connect(secondWindow.showMinimized) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(secondWindow)

        self.mydb = mysql.connector.connect(host='localhost',
                                            user='root',
                                            password='A2980305014',
                                            database='products_managements')
        self.my_cursor = self.mydb.cursor()
        #     # self.my_cursor.execute("CREATE DATABASE products_management")
        self.my_cursor.execute(
            "CREATE TABLE IF NOT EXISTS users(username varchar(255), password varchar(255), email varchar(255) )")
    def clear_field(self):
        self.username_en.clear()
        self.password_en.clear()
        self.repassword_en.clear()
        self.email_en.clear()
    def add_users(self,secondWindow, MainWindow):
        if (self.username_en.text().strip() == '' ) or (self.password_en.text().strip() == '' ) or (self.repassword_en.text().strip() == '' ) or (self.email_en.text().strip() == '' ):
            self.alarmlb.setText('Fill all the blanks')
        else:
            numbers = '1234567890'
            alphabet = 'mnbvcxzasdfghjklpoiuytrewqMNBVCXZASDFGHJKLPOIUYTREWQ'
            signs = '!@#$%^&*()_-/+'
            if  self.password_en.text() != self.repassword_en.text():
                self.alarmlb.setText('Passwords are not the same')
            else:
                check_pass = [False, False, False]
                for letter in self.password_en.text():
                    if (letter not in numbers) and (letter not  in alphabet) and (letter not in signs):
                        self.alarmlb.setText('Password should contains numbers and alphabets and signs')
                    else:
                        if letter in numbers:
                            check_pass[0] = True
                        elif letter in alphabet:
                            check_pass[1] = True
                        elif letter in signs:
                            check_pass[2] = True
                if check_pass != [True, True, True]:
                    self.alarmlb.setText('Password should contains numbers and alphabets and signs')
                else:
                    self.alarmlb.setText('')
            correct_email =  r'\b[A-Za-z0-9.%+-]+@[A-Za-z]+\.[A-Z|a-z]{1,7}\b'
            if re.fullmatch(correct_email, self.email_en.text()):
                self.alarmlb.setText('')
            else:
                self.alarmlb.setText("Email isn't correct!" )
            self.my_cursor.execute("SELECT * FROM users")
            records = self.my_cursor.fetchall()
            if records != '':
                for record in records:
                    if record[0] == self.username_en.text():
                        self.alarmlb.setText('Username already exists')
            values = (self.username_en.text(), self.password_en.text(), self.email_en.text())
            sql_command = "INSERT INTO users(username,password,email) VALUES (%s,%s,%s)"
            self.my_cursor.execute(sql_command, values)
            self.mydb.commit()
            self.clear_field()
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Question)
            msg.setText("You are registered. Do you want to enter the login page?")
            msg.setWindowTitle('Login')
            msg.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
            retval = msg.exec_()
            print(retval)
            if retval == 1024:
                secondWindow.hide()

    def retranslateUi(self, secondWindow):
        _translate = QtCore.QCoreApplication.translate
        secondWindow.setWindowTitle(_translate("secondWindow", "Sign-up"))
        self.title.setText(_translate("secondWindow", "SIGN UP"))
        self.usernamelb.setText(_translate("secondWindow", "Username:"))
        self.passlb.setText(_translate("secondWindow", "Password:"))
        self.btn_signup.setText(_translate("secondWindow", "Sign up"))
        self.acountlb.setText(_translate("secondWindow", "Already have an acount?"))
        self.btn_login.setText(_translate("secondWindow", "Log in"))
        self.repasslb.setText(_translate("secondWindow", "Reapet Password:"))
        self.emaillb.setText(_translate("secondWindow", "Email:"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    secondWindow = QtWidgets.QMainWindow()
    ui = Ui_secondWindow()
    ui.setupUi(secondWindow)
    secondWindow.show()
    sys.exit(app.exec_())
